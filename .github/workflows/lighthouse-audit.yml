name: Lighthouse Badges

on:
  workflow_run:
    workflows: ["Deploy to GitHub Pages"]
    types:
      - completed
  workflow_dispatch:  # Allow manual triggering of the workflow

permissions:
  contents: write  # Needed to push changes back to the repo

jobs:
  lighthouse:
    # Run only if the previous workflow succeeded or if manually triggered
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.15.0

      - name: Install dependencies
        # Switch to npm install if you prefer npm
        run: pnpm install

      - name: Run Lighthouse and Generate Badges
        # Run the CLI directly with your chosen URL & output path
        run: pnpx lighthouse-badges --url='https://cambridgemonorail.github.io/react-weapons-of-choice/' --o='./lighthouse-badges'

      - name: Authenticate as GitHub App
        id: generate-token
        run: |
          # Install required libraries
          pnpm add -g jsonwebtoken @octokit/auth-app

          # Generate a token for the GitHub App
          node <<EOF
          const { createAppAuth } = require('@octokit/auth-app');
          const fs = require('fs');

          const auth = createAppAuth({
            appId: process.env.APP_ID,
            privateKey: fs.readFileSync(process.env.APP_PRIVATE_KEY, 'utf8'),
            installationId: process.env.APP_INSTALLATION_ID,
          });

          auth({ type: 'installation' }).then(({ token }) => {
            const fs = require('fs');
            fs.appendFileSync(process.env.GITHUB_OUTPUT, `token=${token}\n`);
          });
          EOF
        env:
          APP_ID: ${{ secrets.APP_ID }}
          APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}
          APP_INSTALLATION_ID: ${{ secrets.APP_INSTALLATION_ID }}
          GITHUB_OUTPUT: $GITHUB_OUTPUT

      - name: Commit & Push badges
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          # Configure commit author
          git config user.name "tim.morris+buildbot"
          git config user.email "tim.morris+buildbot@users.noreply.github.com"

          # Stage and commit badges
          git add lighthouse-badges
          if git diff --cached --quiet; then
            echo "No changes in badges. Skipping commit."
            exit 0
          fi
          git commit -m "chore: update Lighthouse badges"

          # Push to main branch
          git push https://x-access-token:${{ steps.generate-token.outputs.token }}@github.com/CambridgeMonorail/react-weapons-of-choice.git HEAD:main
