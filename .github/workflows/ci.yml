name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering

permissions:
  actions: read
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check Commit Author
        id: check-author
        run: |
          AUTHOR=$(git log -1 --pretty=format:'%an')
          echo "::set-output name=author::$AUTHOR"
          if [ "$AUTHOR" = "Monorail Updater" ]; then
            echo "Commit author is Monorail Updater. Exiting..."
            exit 0

      # Exit if commit author is Monorail Updater
      - name: Exit if commit author is Monorail Updater
        if: steps.check-author.outputs.author == 'Monorail Updater'
        run: exit 0

      # Set up Node.js with version 22
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      # Install pnpm
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.15.0

      # Cache pnpm dependencies using actions/cache@v4
      - name: Cache pnpm store
        uses: actions/cache@v4 
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Prune pnpm store
        run: pnpm store prune

      # Install dependencies
      - name: Install Dependencies
        run: |
          retry() {
            for i in {1..3}; do
              "$@" && break || {
                echo "Retrying in 10 seconds..."
                sleep 10
              }
            done
          }
          retry pnpm install --frozen-lockfile

      # Install Playwright Browsers
      # - name: Install Playwright Browsers
      #   run: pnpm exec playwright install

      # Run Nx Affected Tasks
      - name: Run Nx Affected Tasks
        run: |
          pnpm exec nx affected -t lint --base=origin/main --head=HEAD --exclude=storybook-host,common-tailwind
          pnpm exec nx affected -t test --base=origin/main --head=HEAD --exclude=storybook-host,common-tailwind
          pnpm exec nx affected -t build --base=origin/main --head=HEAD --exclude=storybook-host,common-tailwind

      # Start Application
      # - name: Start Application
      #   run: pnpm exec nx run riffroll:preview &
      #   env:
      #      CI: true

      # Wait for Application to be Ready
      # - name: Wait for Application to be Ready
      #   run: npx wait-on http://localhost:4300

      # Run E2E Tests
      # - name: Run E2E Tests
      #   run: pnpm exec nx affected -t e2e --base=origin/main --head=HEAD
